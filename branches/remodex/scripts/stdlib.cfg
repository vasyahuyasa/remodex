//  HERE IS COMMON FUNCTIONS AND VARIABLES

//-------- CONSTANTS --------//

//IRC colors
ircgreen    = [ result (concatword "g" $arg1) ] //green    
ircblue     = [ result (concatword "b" $arg1) ] //blue     
ircyellow   = [ result (concatword "y" $arg1) ] //yellow   
ircred      = [ result (concatword "r" $arg1) ] //red      
ircgrey     = [ result (concatword "a" $arg1) ] //grey     
ircmagenta  = [ result (concatword "m" $arg1) ] //magenta  
ircorange   = [ result (concatword "o" $arg1) ] //orange   
irccyan     = [ result (concatword "c" $arg1) ] //cyan     
ircviolet   = [ result (concatword "v" $arg1) ] //violet   
ircpurple   = [ result (concatword "p" $arg1) ] //purple   
ircbrown    = [ result (concatword "n" $arg1) ] //brown   
ircdgrey	= [ result (concatword "d" $arg1) ] //dark grey
ircreset	= [ result (concatword "u" $arg1) ] //reset to normal color

//Server colors
green 	= [ result (concatword "^f0" $arg1) ] // green: player talk
blue 	= [ result (concatword "^f1" $arg1) ] // blue: "echo" command
yellow 	= [ result (concatword "^f2" $arg1) ] // yellow: gameplay messages
red 	= [ result (concatword "^f3" $arg1) ] // red: important errors
gray 	= [ result (concatword "^f4" $arg1) ]
magenta	= [ result (concatword "^f5" $arg1) ]
orange	= [ result (concatword "^f6" $arg1) ]
white 	= [ result (concatword "^f7" $arg1) ]

//Server staff
MODENAMES = "ffa coop teamplay insta instateam effic efficteam tac tacteam capture regencapture ctf instactf protect instaprotect hold instahold efficctf efficprotect effichold"

TEAMMODES = "teamplay instateam efficteam tacteam capture regencapture ctf instactf efficctf protect instaprotect efficprotect hold instahold effichold"

FLAGMODES = "ctf instactf efficctf protect instaprotect efficprotect hold instahold effichold"

//-------- SOME USEFUL FUNCTIONS --------//

//Convert mode number to string
modetostr = [
	result (at $MODENAMES $arg1)
]

//checks list $arg1 containing value $arg2
isinlist = [ result (!= (indexof $arg1 $arg2) -1) ]

//returns all cn of players
allplayers = [ result (listclients) ]

//allactive
allactiveplayers = [
	res = ""
	loop cn $maxclients [
		if (&& (= (playerexists $cn) 1) (= (isspectator $cn) 0)) [
			res = (concat $res $cn)
		]
	]

	result $res
]

allactiveplayers = [
	all = (listclients)
	res = ""
	looplist cn $all [
		if (= (isspectator $cn) 0) [
			res = (concat $res $cn)
		]
	]
	result $res
]

//returns KpD of player
getkpd = [
	deathes = (getdeaths $arg1)
	frags = (getfrags $arg1)
	result (? $deathes (divf (div (* 10 $frags) $deathes) 10) (? $frags $frags 0))
]

//replace element in list;  listreplace list index replace_el
listreplace = [
	rr = ""
	len = (listlen $arg1)
	loop i $len [
		rr = (concat $rr (? (= $i $arg2) $arg3 (at $arg1 $i)))
	]
	result $rr
]

//sorting list
sortlist = [
	res = $arg1
	len = (listlen $arg1)
	loop i $len [
		jlen = (- $len (+ $i 1))
		loop j $jlen [
			rj = (at $res $j)
			rj1 = (at $res (+ $j 1))
			if (> $rj $rj1) [
				res = (listreplace $res $j $rj1)
				res = (listreplace $res (+ $j 1) $rj)
			]
		]	
	]
	
	result $res
]

//sorts base list and replace elements with corresponding numbers in second list. returns second list
sorttwolists = [
	res = $arg1
	res2 = $arg2
	len = (listlen $arg1)
	loop i $len [
		jlen = (- $len (+ $i 1))
		loop j $jlen [
			rj = (at $res $j)
			rj1 = (at $res (+ $j 1))
			if (> $rj $rj1) [
				res = (listreplace $res $j $rj1)
				res = (listreplace $res (+ $j 1) $rj)
				
				tmp = (at $res2 $j)
				res2 = (listreplace $res2 $j (at $res2 (+ $j 1)))
				res2 = (listreplace $res2 (+ $j 1) $tmp)
			]
		]	
	]
	result $res2
]

//shows "usage" for  command
usage = [ 
	result (concatword "^f1Usage: ^f0" $commandchar (commandhelp $arg1))
]

// out to log
log = [
	echo (format "[%1] %2" (systimef "%d %b %X") $arg1)
]

// exec all .cfg in directory
execdir = [
	initvar skipfiles ""
	dir = $arg1
	i = 0
	loopfiles f $dir cfg [
		canload = 1
		looplist sf $skipfiles [
			if (=s $sf (format "%1.cfg" $f)) [ canload = 0 ]
		]
		
		if $canload [
			file = (format "%1/%2.cfg" $dir $f) 
			//log (format "executing '%1'" $file)
			i = (+ $i 1)
			exec $file
		]
 	]
	log (format "executed %1 files in '%2'" $i $dir)		
]

millistostr = [
	res = ""
	if (>= (div $arg1 86400000) 1) [
		res = (formatmillis "%d days %h hours %m minutes" $arg1)
	] [
		if (>= (div $arg1 3600000) 1) [
			res = (formatmillis "%h hours %m minutes" $arg1)
		] [
			if (>= (div $arg1 60000) 1) [
				res = (formatmillis "%m minutes" $arg1)	
			]
		]
	]

	if ($arg2) [
		res = (concat $res (formatmillis "%s.%i seconds" $arg1))
	]	
	result $res
]

// execute $arg2 if $arg1 not defined ( example: ifndef a [ echo "$a not defined" ] )
ifndef = [ if (! (identexists $arg1)) [ @arg2 ] ]

// if variable $arg1 not defined set it to $arg2
initvar = [ if (! (identexists $arg1)) [ alias $arg1 $arg2 ] ]
